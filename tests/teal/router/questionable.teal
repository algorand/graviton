#pragma version 6
txn NumAppArgs
int 0
==
bnz main_l20
txna ApplicationArgs 0
method "add(uint64,uint64)uint64"
==
bnz main_l19
txna ApplicationArgs 0
method "sub(uint64,uint64)uint64"
==
bnz main_l18
txna ApplicationArgs 0
method "mul(uint64,uint64)uint64"
==
bnz main_l17
txna ApplicationArgs 0
method "div(uint64,uint64)uint64"
==
bnz main_l16
txna ApplicationArgs 0
method "mod(uint64,uint64)uint64"
==
bnz main_l15
txna ApplicationArgs 0
method "all_laid_to_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)uint64"
==
bnz main_l14
txna ApplicationArgs 0
method "empty_return_subroutine()void"
==
bnz main_l13
txna ApplicationArgs 0
method "log_1()uint64"
==
bnz main_l12
txna ApplicationArgs 0
method "log_creation()string"
==
bnz main_l11
err
main_l11:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
==
&&
assert
callsub logcreation_8
store 67
byte 0x151f7c75
load 67
concat
log
int 1
return
main_l12:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
txn OnCompletion
int OptIn
==
txn ApplicationID
int 0
!=
&&
||
assert
callsub log1_7
store 65
byte 0x151f7c75
load 65
itob
concat
log
int 1
return
main_l13:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
txn OnCompletion
int OptIn
==
||
assert
callsub emptyreturnsubroutine_6
int 1
return
main_l14:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 30
txna ApplicationArgs 2
btoi
store 31
txna ApplicationArgs 3
btoi
store 32
txna ApplicationArgs 4
btoi
store 33
txna ApplicationArgs 5
btoi
store 34
txna ApplicationArgs 6
btoi
store 35
txna ApplicationArgs 7
btoi
store 36
txna ApplicationArgs 8
btoi
store 37
txna ApplicationArgs 9
btoi
store 38
txna ApplicationArgs 10
btoi
store 39
txna ApplicationArgs 11
btoi
store 40
txna ApplicationArgs 12
btoi
store 41
txna ApplicationArgs 13
btoi
store 42
txna ApplicationArgs 14
btoi
store 43
txna ApplicationArgs 15
store 46
load 46
int 0
extract_uint64
store 44
load 46
int 8
extract_uint64
store 45
load 30
load 31
load 32
load 33
load 34
load 35
load 36
load 37
load 38
load 39
load 40
load 41
load 42
load 43
load 44
load 45
callsub alllaidtoargs_5
store 47
byte 0x151f7c75
load 47
itob
concat
log
int 1
return
main_l15:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 24
txna ApplicationArgs 2
btoi
store 25
load 24
load 25
callsub mod_4
store 26
byte 0x151f7c75
load 26
itob
concat
log
int 1
return
main_l16:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 18
txna ApplicationArgs 2
btoi
store 19
load 18
load 19
callsub div_3
store 20
byte 0x151f7c75
load 20
itob
concat
log
int 1
return
main_l17:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 12
txna ApplicationArgs 2
btoi
store 13
load 12
load 13
callsub mul_2
store 14
byte 0x151f7c75
load 14
itob
concat
log
int 1
return
main_l18:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 6
txna ApplicationArgs 2
btoi
store 7
load 6
load 7
callsub sub_1
store 8
byte 0x151f7c75
load 8
itob
concat
log
int 1
return
main_l19:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
btoi
store 1
load 0
load 1
callsub add_0
store 2
byte 0x151f7c75
load 2
itob
concat
log
int 1
return
main_l20:
txn OnCompletion
int OptIn
==
bnz main_l22
err
main_l22:
txn ApplicationID
int 0
!=
assert
byte "optin call"
log
int 1
return

// add
add_0:
store 4
store 3
load 3
load 4
+
store 5
load 5
retsub

// sub
sub_1:
store 10
store 9
load 9
load 10
-
store 11
load 11
retsub

// mul
mul_2:
store 16
store 15
load 15
load 16
*
store 17
load 17
retsub

// div
div_3:
store 22
store 21
load 21
load 22
/
store 23
load 23
retsub

// mod
mod_4:
store 28
store 27
load 27
load 28
%
store 29
load 29
retsub

// all_laid_to_args
alllaidtoargs_5:
store 63
store 62
store 61
store 60
store 59
store 58
store 57
store 56
store 55
store 54
store 53
store 52
store 51
store 50
store 49
store 48
load 48
load 49
+
load 50
+
load 51
+
load 52
+
load 53
+
load 54
+
load 55
+
load 56
+
load 57
+
load 58
+
load 59
+
load 60
+
load 61
+
load 62
+
load 63
+
store 64
load 64
retsub

// empty_return_subroutine
emptyreturnsubroutine_6:
byte "appear in both approval and clear state"
log
retsub

// log_1
log1_7:
int 1
store 66
load 66
retsub

// log_creation
logcreation_8:
byte "logging creation"
len
itob
extract 6 0
byte "logging creation"
concat
store 68
load 68
retsub

  
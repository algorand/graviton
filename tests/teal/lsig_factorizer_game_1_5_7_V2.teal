#pragma version 5
intcblock 1 12 35 10
pushbytes 0x43616e20796f7520666163746f722031202a20785e32202d203132202a2078202b203335203f // "Can you factor 1 * x^2 - 12 * x + 35 ?"
pop
intc_0 // 1
intc_1 // 12
intc_2 // 35
arg 0
btoi
callsub sub0
store 0
intc_0 // 1
intc_1 // 12
intc_2 // 35
arg 1
btoi
callsub sub0
store 1
load 0
load 1
+
pushint 2 // 2
/
store 2
arg 0
btoi
arg 1
btoi
!=
load 2
callsub sub1
&&
return
sub0: // root_closeness
store 6
store 5
store 4
store 3
load 3
load 6
*
load 6
*
load 5
+
store 7
load 4
load 6
*
store 8
load 7
load 8
<
bnz sub0_l2
load 7
load 8
-
b sub0_l3
sub0_l2:
load 8
load 7
-
sub0_l3:
retsub
sub1: // calculate_prize
store 9
load 9
intc_3 // 10
<
bnz sub1_l2
pushint 0 // 0
b sub1_l3
sub1_l2:
intc_3 // 10
load 9
-
sub1_l3:
retsub
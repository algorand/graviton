#pragma version 5
intcblock 1 12 35
pushbytes 0x43616e20796f7520666163746f722031202a20785e32202d203132202a2078202b203335203f // "Can you factor 1 * x^2 - 12 * x + 35 ?"
pop
intc_0 // 1
intc_1 // 12
intc_2 // 35
arg 0
btoi
callsub sub0
store 0
intc_0 // 1
intc_1 // 12
intc_2 // 35
arg 1
btoi
callsub sub0
store 1
load 0
load 1
+
store 2
load 2
callsub sub1
store 3
txn TypeEnum
intc_0 // pay
==
txn CloseRemainderTo
global ZeroAddress
==
&&
arg 0
btoi
arg 1
btoi
!=
&&
load 3
&&
txn Amount
load 3
==
&&
return
sub0: // root_closeness
store 7
store 6
store 5
store 4
load 4
load 7
*
load 7
*
load 6
+
store 8
load 5
load 7
*
store 9
load 8
load 9
<
bnz sub0_l2
load 8
load 9
-
b sub0_l3
sub0_l2:
load 9
load 8
-
sub0_l3:
retsub
sub1: // calculate_prize
store 10
load 10
intc_0 // 1
+
pushint 20 // 20
<
bnz sub1_l2
pushint 0 // 0
b sub1_l3
sub1_l2:
pushint 1000000 // 1000000
pushint 10 // 10
load 10
intc_0 // 1
+
pushint 2 // 2
/
-
*
sub1_l3:
retsub